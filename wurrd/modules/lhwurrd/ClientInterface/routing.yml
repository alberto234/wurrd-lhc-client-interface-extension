# Custom routes used by the Wurrd Client Interface plugin
#
# EN >> 3/8/2016 
# It was discovered that some hosting providers block PUT and DELETE requests
# As a workaround for such providers, we shall also support POST in addition to 
# these specific methods.
# 

## -- Server Information

# This route is used to request for server details without providing authentication
wurrd_client_simple_server_info:
    # Relative path from the Mibew web root is used here.
    path: /wurrd/clientinterface/serverinfo
    # Set some defaults for the request
    defaults:
        # This value is special. It tells the system what action should be
        # invoked for the response
        _controller: Wurrd\ClientInterface\Controller\ServerController::simpleInfoAction
    methods: [GET]

# This route is use to request for server details with authentication
# Expects HTTP Header X-Auth-Token = <deviceuuid>:<accesstoken>
wurrd_client_detail_server_info:
    path: /wurrd/clientinterface/serverinfo/details
    defaults:
        _controller: Wurrd\ClientInterface\Controller\ServerController::detailInfoAction
    methods: [GET]



## -- Operator interactions

wurrd_client_operator_login:
    # The login request details are passed in as a JSON payload.
    path: /wurrd/clientinterface/operator/login
    defaults:
        _controller: Wurrd\ClientInterface\Controller\OperatorController::loginAction
    methods: [PUT, POST]


# Expects HTTP Header X-Auth-Token = <deviceuuid>:<accesstoken>
wurrd_client_operator_refresh_access:
    path: /wurrd/clientinterface/operator/refreshaccess/{refreshtoken}
    defaults:
        _controller: Wurrd\ClientInterface\Controller\OperatorController::refreshAccessAction
    methods: [PUT, POST]

# Expects HTTP Header X-Auth-Token = <deviceuuid>:<accesstoken>
wurrd_client_operator_logout:
    path: /wurrd/clientinterface/operator/logout
    defaults:
        _controller: Wurrd\ClientInterface\Controller\OperatorController::logoutAction
    methods: [DELETE, POST]

# Expects HTTP Header X-Auth-Token = <deviceuuid>:<accesstoken>
wurrd_client_operator_detailed_info:
    path: /wurrd/clientinterface/operator/details
    defaults:
        _controller: Wurrd\ClientInterface\Controller\OperatorController::detailInfoAction
    methods: [GET]

# Expects HTTP Header X-Auth-Token = <deviceuuid>:<accesstoken>
wurrd_client_operator_users_update:
    path: /wurrd/clientinterface/operator/users/updatethreads/{clientrevision}
    defaults:
        _controller: Wurrd\ClientInterface\Controller\UsersController::updateThreadsAction
    methods: [GET]
    requirements:
        clientrevision: \d{1,10}

# Expects HTTP Header X-Auth-Token = <deviceuuid>:<accesstoken>
wurrd_client_operator_start_chat:
    path: /wurrd/clientinterface/operator/threads/{threadid}/start
    defaults:
        _controller: Wurrd\ClientInterface\Controller\ThreadController::startChatAction
    methods: [PUT, POST]
    requirements:
        threadid: \d{1,10}


# A JSON object containing the request detail is expected in the body of the POST request. 
# The JSON object should contain the field "threads" which will hold an array of thread details
# containing the following fields: 
#   - threadid
#   - lastid
# e.g {"threads" : [{"threadid":2, "lastid":23}, {"threadid":3, "lastid":95}]}
# Q: What is the return?
#
# Expects HTTP Header X-Auth-Token = <deviceuuid>:<accesstoken>
wurrd_client_operator_messages_update:
    path: /wurrd/clientinterface/operator/threads/bulkupdatemessages
    defaults:
        _controller: Wurrd\ClientInterface\Controller\ThreadController::bulkUpdateMessagesAction
    methods: [POST]

